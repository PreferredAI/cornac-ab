---
version: '3'
services:
  opensearch-node1:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true  # along with the memlock settings below, disables swapping
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m  # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536  # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600  # required for Performance Analyzer
    networks:
      - opensearch-net
  opensearch-node2:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - opensearch-net
  dashboards-init:
    image: curlimages/curl
    container_name: init
    volumes:
      - ./init/dashboard.ndjson:/tmp/dashboard.ndjson
    entrypoint:
      - /bin/sh
      - '-c'
      - |
          URL=http://opensearch-dashboards:5601
          status_code=$$(curl --write-out %{http_code} --silent --output /dev/null $$URL/app/home)
          echo 'Waiting for opensearch-dashboards to be in ready state...'
          sleep 2
          while [ $$status_code -ne 200 ]
          do
            status_code=$$(curl --write-out %{http_code} --silent --output /dev/null $$URL/app/home)
            echo 'Waiting for opensearch-dashboards to be in ready state...'
            sleep 2
          done
          echo 'Starting to import dashboards...'
          curl -X POST --silent \
            --form file=@/tmp/dashboard.ndjson \
            -H "securitytenant: Global" \
            -H "osd-xsrf: true" \
            "$$URL/api/saved_objects/_import?overwrite=true"
          echo 'Completed importing dashboards'
    depends_on:
    - opensearch-node1
    - opensearch-node2
    - opensearch-dashboards
    networks:
      - opensearch-net
  data-init:
    image: cornac/cornac-ab-sample-data
    container_name: data-init
    environment:
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
    depends_on:
      dashboards-init:
          condition: service_completed_successfully
    networks:
      - opensearch-net
  cornac-ab-backend:
    image: cornac/cornac-ab-backend:latest
    container_name: cornac-ab-backend
    environment:
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
      - SPRING_DATASOURCE_URL=jdbc:h2:file:/tmp/data/demodb
      - CORNAC_UPLOAD_DIR=/tmp/uploads
      - CORNAC_EXECUTABLE_DIR=.
    ports:
      - 8080:8080
    volumes:
      - ./data/:/tmp/data/
#      - ./cornac/:/tmp/cornac/
      - ./uploads/:/tmp/uploads/
    depends_on:
      dashboards-init:
          condition: service_completed_successfully
    networks:
      - opensearch-net
      - cornac-ab-net
  cornac-ab-frontend:
    image: cornac/cornac-ab-frontend:latest
    container_name: cornac-ab-frontend
    ports:
      - 8081:8080
    depends_on:
      - cornac-ab-backend
    networks:
      - opensearch-net
      - cornac-ab-net
  cornac-ab-demo:
    image: cornac/cornac-ab-demo:latest
    container_name: cornac-ab-demo
    ports:
      - 8082:8080
    depends_on:
      - cornac-ab-backend
    networks:
      - cornac-ab-net


volumes:
  opensearch-data1:
  opensearch-data2:

networks:
  opensearch-net:
  cornac-ab-net:
